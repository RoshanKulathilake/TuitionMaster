/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.PaymentController;
import Control.StudentController;
import Control.SubjectController;
import Model.Payment;
import Model.Student;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author DK_Roshan
 */
public class PaymentJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PaymentJFrame
     */
    public PaymentJFrame() {
        initComponents();
        getDates();
        getYearsFromDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        searchIDTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        stuDetButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        stuNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        stuGradeTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectsList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        regDateTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        selectYearComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        paymentList = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        paidButton = new javax.swing.JButton();
        yearTextField = new javax.swing.JTextField();
        monthTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        feeTextField = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 450));
        setPreferredSize(new java.awt.Dimension(1000, 400));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 255));

        searchIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Student ID");

        stuDetButton.setText("Student Details");
        stuDetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuDetButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(searchIDTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(stuDetButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(searchButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(stuDetButton)
                .addGap(211, 211, 211))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(stuDetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 70));
        getContentPane().add(stuNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 170, 30));

        jLabel2.setText("Student Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));
        getContentPane().add(stuGradeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 170, 30));

        jLabel3.setText("Grade");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jScrollPane1.setViewportView(subjectsList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 170, 140));

        jLabel4.setText("Subjects");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));
        getContentPane().add(regDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 170, 30));

        jLabel5.setText("Reg: Date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        selectYearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Year" }));
        selectYearComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectYearComboBoxItemStateChanged(evt);
            }
        });
        getContentPane().add(selectYearComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 110, 240, 30));

        jScrollPane2.setViewportView(paymentList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 240, 220));

        jLabel6.setText("Year");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, -1, -1));

        jLabel7.setText("Month");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, -1, -1));

        jLabel8.setText("Date");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, -1, -1));

        jLabel9.setText("Fee");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, -1, -1));

        paidButton.setText("Payment Done");
        paidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidButtonActionPerformed(evt);
            }
        });
        getContentPane().add(paidButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 310, 130, 60));
        getContentPane().add(yearTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 180, 30));
        getContentPane().add(monthTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, 180, 30));
        getContentPane().add(dateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, 180, 30));
        getContentPane().add(feeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 180, 30));

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, 130, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDTextFieldActionPerformed

        
    }//GEN-LAST:event_searchIDTextFieldActionPerformed

    private void stuDetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuDetButtonActionPerformed
        
        StudentJFrame sJF = new StudentJFrame();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        sJF.setLocation(dim.width/2-sJF.getSize().width/2, dim.height/2-sJF.getSize().height/2);
        sJF.setVisible(true);
        sJF.setDefaultCloseOperation(sJF.DISPOSE_ON_CLOSE);
        
    }//GEN-LAST:event_stuDetButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        if(searchIDTextField.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter the student ID");
        }else{
            String searchID = searchIDTextField.getText();
            Student student = StudentController.searchStudentByID(searchID);
            stuNameTextField.setText(student.getfName());
            stuGradeTextField.setText(student.getGrade());
            regDateTextField.setText(student.getRegDate());
            ArrayList<String> arrayList = new ArrayList<String>();
            arrayList = SubjectController.searchSubjectStudentByStudentID(searchID);
            
            DefaultListModel tempList = new DefaultListModel();
            for(int i=0;i<arrayList.size();i++){
                ((DefaultListModel)tempList).addElement(arrayList.get(i));
                //System.out.println(arrayList.get(i));
            }
            subjectsList.setModel(tempList);
            
            double totalFee = SubjectController.getFee(searchID);
            feeTextField.setText(Double.toString(totalFee));
            
            
        }
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void paidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidButtonActionPerformed
        
        if(searchIDTextField.getText().equals("")|| stuNameTextField.getText().equals("")|| stuGradeTextField.getText().equals("") || regDateTextField.getText().equals("") || feeTextField.getText().equals("")  ){
            JOptionPane.showMessageDialog(null,"Please enter data");
        }else{
            String searchID = searchIDTextField.getText();
            String sName = stuNameTextField.getText();
            double fee = Double.parseDouble(feeTextField.getText());
            String date = dateTextField.getText();
            int year = Integer.parseInt(yearTextField.getText());
            String month = monthTextField.getText();
            
            Student student = new Student();
            student.setStuID(searchID);
            student.setfName(sName);
            
            Payment payment = new Payment();
            payment.setFee(fee);
            payment.setMonth(month);
            payment.setPaymentDate(date);
            payment.setYear(year);
            
            int result = PaymentController.addPayment(student,payment);
            
            if(result == 1){
                printPdf();
                JOptionPane.showMessageDialog(null,"Payment done..");
                getYearsFromDB();
            }else{
                JOptionPane.showMessageDialog(null,"Error..");
            }
        }
        
    }//GEN-LAST:event_paidButtonActionPerformed

    private void selectYearComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectYearComboBoxItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            String selectedYear = selectYearComboBox.getSelectedItem().toString();
            String searchID = searchIDTextField.getText();
            
            ArrayList<String> dates = new ArrayList<String>();
            dates = PaymentController.getPaymentDates(searchID,selectedYear);
        
            DefaultListModel tempList = new DefaultListModel();
            for(int i=0;i<dates.size();i++){
                ((DefaultListModel)tempList).addElement(dates.get(i));
            //System.out.println(subjectIDs.get(i));
            }
            paymentList.setModel(tempList);
        }
    }//GEN-LAST:event_selectYearComboBoxItemStateChanged

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        reset();
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JTextField feeTextField;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField monthTextField;
    private javax.swing.JButton paidButton;
    private javax.swing.JList<String> paymentList;
    private javax.swing.JTextField regDateTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchIDTextField;
    private javax.swing.JComboBox<String> selectYearComboBox;
    private javax.swing.JButton stuDetButton;
    private javax.swing.JTextField stuGradeTextField;
    private javax.swing.JTextField stuNameTextField;
    private javax.swing.JList<String> subjectsList;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables

    private void getDates() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDate localDate = LocalDate.now(); 
        dateTextField.setText(dtf.format(localDate));
        
        DateTimeFormatter year = DateTimeFormatter.ofPattern("yyyy");
        LocalDate ld = LocalDate.now(); 
        yearTextField.setText(year.format(ld));
        
        DateTimeFormatter month = DateTimeFormatter.ofPattern("MM");
        LocalDate ldd = LocalDate.now(); 
        if(Integer.valueOf(month.format(ldd))==1){
            monthTextField.setText("January");
        }else if(Integer.valueOf(month.format(ldd))==2){
            monthTextField.setText("February");
        }else if(Integer.valueOf(month.format(ldd))==3){
            monthTextField.setText("March");
        }else if(Integer.valueOf(month.format(ldd))==4){
            monthTextField.setText("Aprial");
        }else if(Integer.valueOf(month.format(ldd))==5){
            monthTextField.setText("May");
        }else if(Integer.valueOf(month.format(ldd))==6){
            monthTextField.setText("June");
        }else if(Integer.valueOf(month.format(ldd))==7){
            monthTextField.setText("July");
        }else if(Integer.valueOf(month.format(ldd))==8){
            monthTextField.setText("August");
        }else if(Integer.valueOf(month.format(ldd))==9){
            monthTextField.setText("September");
        }else if(Integer.valueOf(month.format(ldd))==10){
            monthTextField.setText("October");
        }else if(Integer.valueOf(month.format(ldd))==11){
            monthTextField.setText("November");
        }else if(Integer.valueOf(month.format(ldd))==12){
            monthTextField.setText("December");
        }
        
        
        
    }

    private void getYearsFromDB() {
        
        
        ArrayList<String> paymentYear = new ArrayList<String>();
        paymentYear.clear();
        selectYearComboBox.removeAllItems();
        paymentYear = PaymentController.getPaymentYears();
        paymentYear.add(0,"Select year to search payments");
        for(int i=0; i<paymentYear.size();i++){
            
            selectYearComboBox.addItem(paymentYear.get(i));
            
        }
    }

    private void reset() {
        stuNameTextField.setText("");
        searchIDTextField.setText("");
        stuGradeTextField.setText("");
        regDateTextField.setText("");
        feeTextField.setText("");
        DefaultListModel model = (DefaultListModel) subjectsList.getModel();
        model.removeAllElements();
        getYearsFromDB();
    }

    private void printPdf() {
        
        int col = 4;
        String searchID = searchIDTextField.getText();
        ArrayList<String> arrayList = new ArrayList<String>();
        arrayList = SubjectController.searchSubjectStudentByStudentID(searchID);
              
        try {
            Document doc = new Document();
            PdfPTable pt = new PdfPTable(col);
            try {
                PdfWriter.getInstance(doc, new FileOutputStream("Report.pdf"));
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PaymentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            doc.open();
            doc.add(new Paragraph("                                                     Sigma 2 Higher Education Center         "));
            doc.add(new Paragraph("Student Name     :   "+stuNameTextField.getText()));
            doc.add(new Paragraph("Student ID           :   "+searchIDTextField.getText()));
            doc.add(new Paragraph("Studet Grade       :   "+stuGradeTextField.getText()));
            doc.add(new Paragraph("Payment Year      :   "+yearTextField.getText()));
            doc.add(new Paragraph("Paid For               :   "+monthTextField.getText()));
            doc.add(new Paragraph("Payment Date      :   "+dateTextField.getText()));
            doc.add(new Paragraph("Total Fee              :   Rs  "+feeTextField.getText()));
            doc.add(new Paragraph("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -- - - - - - - -  "));
            
            for(int i=0;i<arrayList.size();i++){
                
                pt.addCell(arrayList.get(i)+" Week - 1");
                pt.addCell(arrayList.get(i)+" Week - 2");
                pt.addCell(arrayList.get(i)+" Week - 3");
                pt.addCell(arrayList.get(i)+" Week - 4");
                
            }
            doc.add(pt);
            doc.add(new Paragraph("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -- - - - - - - -  "));      
            doc.close();
        } catch (DocumentException ex) {
            Logger.getLogger(PaymentJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Desktop.isDesktopSupported()) {
            try {
                File myFile = new File("D://NetBeans//TuitionMaster/Report.pdf");
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
            // no application registered for PDFs
            }
        }
    }
}
