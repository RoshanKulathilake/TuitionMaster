/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.SubjectController;
import Control.TeacherController;
import Model.Subject;
import Model.Teacher;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author DK_Roshan
 */
public class SubjectJFrame extends javax.swing.JFrame {

    public static final String LAUNCHFROMTEACHER = "LAUNCHEDFROMTEACHER";
    public static final String LAUNCHALONE = "ALONE";
    /**
     * Creates new form SubjectJFrame
     */
    public SubjectJFrame(String launch) {
         btnGrp = new ButtonGroup();
        initComponents();
        getSubjectNames();
       
        //getTeachersNames();
        
        switch(launch){
            case LAUNCHFROMTEACHER:
                //teacherNamejComboBox.setVisible(false);
                lblTeacher.setVisible(false);
                teacherNameTextField.setVisible(false);
                //teacherNamejComboBox.setVisible(false);
                //jLabel5.setVisible(false);
                break;
            default:
                break;
        }
    }
    
    public void onClick(String val){
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updatejButton = new javax.swing.JButton();
        deletejButton = new javax.swing.JButton();
        addjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        subjectNamejTextField = new javax.swing.JTextField();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        searchIDTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        subjectIDjRadioButton = new javax.swing.JRadioButton();
        subjectNamejRadioButton = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        searchComboBox = new javax.swing.JComboBox<>();
        subjectIDjTextField = new javax.swing.JTextField();
        subjectIDjButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        subjectFeejTextField = new javax.swing.JTextField();
        subjectYearjComboBox = new javax.swing.JComboBox<>();
        lblTeacher = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultjList = new javax.swing.JList<>(new DefaultListModel());
        jLabel4 = new javax.swing.JLabel();
        getjButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        teacherNameTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(540, 480));
        setPreferredSize(new java.awt.Dimension(450, 395));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updatejButton.setText("Update");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updatejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, 100, 53));

        deletejButton.setText("Delete");
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deletejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, 100, 53));

        addjButton.setText("Add");
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 100, 53));

        jLabel1.setText("Subject ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel2.setText("Subject Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel3.setText("Subject Year");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        subjectNamejTextField.setPreferredSize(new java.awt.Dimension(50, 30));
        getContentPane().add(subjectNamejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 130, -1));

        jDesktopPane4.setBackground(new java.awt.Color(204, 204, 255));

        searchIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDTextFieldActionPerformed(evt);
            }
        });

        jLabel11.setText("Search by :");

        subjectIDjRadioButton.setBackground(new java.awt.Color(204, 204, 255));
        btnGrp
        .add(subjectIDjRadioButton);
        subjectIDjRadioButton.setText("ID");

        subjectNamejRadioButton.setBackground(new java.awt.Color(204, 204, 255));
        btnGrp.add(subjectNamejRadioButton);
        subjectNamejRadioButton.setText("Name");

        jLabel12.setText("Subject ID/Name");

        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category" }));
        searchComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchComboBoxItemStateChanged(evt);
            }
        });
        searchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboBoxActionPerformed(evt);
            }
        });

        jDesktopPane4.setLayer(searchIDTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(subjectIDjRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(subjectNamejRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(searchComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subjectIDjRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subjectNamejRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(subjectIDjRadioButton)
                    .addComponent(subjectNamejRadioButton)
                    .addComponent(jLabel12)
                    .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jDesktopPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, -1));

        subjectIDjTextField.setPreferredSize(new java.awt.Dimension(50, 30));
        getContentPane().add(subjectIDjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 130, -1));

        subjectIDjButton.setText("Generate");
        subjectIDjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectIDjButtonActionPerformed(evt);
            }
        });
        getContentPane().add(subjectIDjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 150, 80, 30));

        jLabel6.setText("Fee");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        subjectFeejTextField.setPreferredSize(new java.awt.Dimension(50, 30));
        getContentPane().add(subjectFeejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 130, -1));

        subjectYearjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Grade", "Grade-6", "Grade-7", "Grade-8", "Grade-9", "Grade-10", "Grade-11" }));
        getContentPane().add(subjectYearjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 130, 30));

        lblTeacher.setText("Teacher");
        getContentPane().add(lblTeacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 60, -1));

        searchResultjList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchResultjList.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchResultjListPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(searchResultjList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 210, 180));

        jLabel4.setText("Search results");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, -1, -1));

        getjButton.setText("Get");
        getjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getjButtonActionPerformed(evt);
            }
        });
        getContentPane().add(getjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 70, 30));

        clearButton.setText("Clear");
        clearButton.setMaximumSize(new java.awt.Dimension(63, 22));
        clearButton.setMinimumSize(new java.awt.Dimension(63, 20));
        clearButton.setPreferredSize(new java.awt.Dimension(63, 23));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, 100, 53));
        getContentPane().add(teacherNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 130, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        if(subjectNamejTextField.getText().equals("") || subjectYearjComboBox.getSelectedItem().toString().equals("") || subjectFeejTextField.getText().equals("") || subjectIDjTextField.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"No subject is selected to update");
        }else{    
            String subName = subjectNamejTextField.getText();
            String subYear = subjectYearjComboBox.getSelectedItem().toString();
            String subID = subjectIDjTextField.getText();
            Double subFee = Double.parseDouble(subjectFeejTextField.getText());
            
            Subject subject = new Subject(subName,subID,subYear,subFee);
            
            String teacherName = teacherNameTextField.getText();
            String teacherID = TeacherController.searchTeacherID(teacherName);
            
            int updtSubjectResult = SubjectController.updateSubject(subject);
            //int updtSubjectTeacherResult = SubjectController.updateSubjectTeacher(subID,teacherID);
        
            if(updtSubjectResult==1 ){
                JOptionPane.showMessageDialog(null,"Record updated");
                onClick("OK");
                reset();
                getSubjectNames();
            }else JOptionPane.showMessageDialog(null,"Error");
        }
    }//GEN-LAST:event_updatejButtonActionPerformed

    private void subjectIDjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectIDjButtonActionPerformed
        if(subjectNamejTextField.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter subject name");
        }else{
            String subName = subjectNamejTextField.getText();
            String subYear = subjectYearjComboBox.getSelectedItem().toString();
            subjectIDjTextField.setText(calculateSubjectID(subName,subYear)); 
        }
    }//GEN-LAST:event_subjectIDjButtonActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        
        if(subjectNamejTextField.getText().equals("") || subjectYearjComboBox.getSelectedItem().toString().equals("") || subjectFeejTextField.getText().equals("") || subjectIDjTextField.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"Please fill the fields");
        }else{
        
            String subName = subjectNamejTextField.getText();
            String subYear = subjectYearjComboBox.getSelectedItem().toString();
            String subID = subjectIDjTextField.getText();
            Double subFee = Double.parseDouble(subjectFeejTextField.getText());
        
            Subject subject = new Subject(subName,subID,subYear,subFee);
        
            int addSubjectResult = SubjectController.addSubject(subject);
        
            if(addSubjectResult==1){
                JOptionPane.showMessageDialog(null,"Record added");
                onClick("OK");
                reset();
                getSubjectNames();
            }else{
                JOptionPane.showMessageDialog(null,"Error");
                
            }
        }
    }//GEN-LAST:event_addjButtonActionPerformed

    private void searchIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDTextFieldActionPerformed
        
        if(subjectIDjRadioButton.isSelected()){
            String searchSubjectID = searchIDTextField.getText();
            Subject subject = SubjectController.searchSubjectByID(searchSubjectID);
            if(subject !=null){
                String teacherNIC = SubjectController.searchTeacherID(searchSubjectID);
                String teacherName = TeacherController.searchteacherName(teacherNIC);
                subjectNamejTextField.setText(subject.getSubjectName());
                subjectYearjComboBox.setSelectedItem(subject.getSubjectYear());
                subjectIDjTextField.setText(subject.getSubjectID());
                subjectFeejTextField.setText(String.valueOf(subject.getSubjectFee()));
                teacherNameTextField.setText(teacherName);
            }else if(subject==null){
                JOptionPane.showMessageDialog(null,"No result found");
            }

        }else if(subjectNamejRadioButton.isSelected()){
            String searchSubjectName = searchIDTextField.getText();
            ArrayList<String> searchResult = new ArrayList<String>();
            searchResult = SubjectController.searchSubjectByName(searchSubjectName);
            if(searchResult !=null){
                DefaultListModel searchResultModel = new DefaultListModel();
                for(int i=0;i<searchResult.size();i++){
                    ((DefaultListModel)searchResultModel).addElement(searchResult.get(i));
            
                }
                searchResultjList.setModel(searchResultModel);
            }else{
                JOptionPane.showMessageDialog(null,"No result found");
            }
            
        }else{
            JOptionPane.showMessageDialog(null,"Please select the search option");
        }

    }//GEN-LAST:event_searchIDTextFieldActionPerformed

    private void searchResultjListPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchResultjListPropertyChange
        
    }//GEN-LAST:event_searchResultjListPropertyChange

    private void getjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getjButtonActionPerformed
        String selectedSubject = searchResultjList.getSelectedValue();
        Subject subject = SubjectController.searchSubjectByID(selectedSubject);
        String teacherNIC = SubjectController.searchTeacherID(selectedSubject);
        String teacherName = TeacherController.searchteacherName(teacherNIC);
        subjectNamejTextField.setText(subject.getSubjectName());
        subjectYearjComboBox.setSelectedItem(subject.getSubjectYear());
        subjectIDjTextField.setText(subject.getSubjectID());
        subjectFeejTextField.setText(String.valueOf(subject.getSubjectFee()));
        teacherNameTextField.setText(teacherName);
    }//GEN-LAST:event_getjButtonActionPerformed

    private void searchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchComboBoxActionPerformed

    private void searchComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchComboBoxItemStateChanged

        if(evt.getStateChange()==ItemEvent.SELECTED){
            String selectedSubject = searchComboBox.getSelectedItem().toString();

            ArrayList<String> subjectIDs = new ArrayList<String>();
            subjectIDs = SubjectController.searchSubjectIDs(selectedSubject);

            DefaultListModel tempList = new DefaultListModel();
            for(int i=0;i<subjectIDs.size();i++){
                ((DefaultListModel)tempList).addElement(subjectIDs.get(i));
                //System.out.println(subjectIDs.get(i));
            }
            searchResultjList.setModel(tempList);
        }
    }//GEN-LAST:event_searchComboBoxItemStateChanged

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        reset();
        
    }//GEN-LAST:event_clearButtonActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        
        if(subjectNamejTextField.getText().equals("") || subjectYearjComboBox.getSelectedItem().toString().equals("") || subjectFeejTextField.getText().equals("") || subjectIDjTextField.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"No subject is selected to delete");
        }else{
            String subID = subjectIDjTextField.getText();
            String teacherName = teacherNameTextField.getText();
            String teacherID = TeacherController.searchTeacherID(teacherName);
            
            int dltSubjectResult = SubjectController.deleteSubject(subID);
            int dltSubjectTeacherResult = SubjectController.deleteSubjectTeacher(subID,teacherID);
        
            if(dltSubjectResult==1 && dltSubjectTeacherResult==1 ){
                JOptionPane.showMessageDialog(null,"Record deleted");
                onClick("OK");
                reset();
                getSubjectNames();
            }else JOptionPane.showMessageDialog(null,"Error");
        }
        
    }//GEN-LAST:event_deletejButtonActionPerformed
    
  
    private String calculateSubjectID(String subName, String subYear){
        String subID=subName+"-"+subYear;
        return subID;
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubjectJFrame(SubjectJFrame.LAUNCHALONE).setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addjButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deletejButton;
    private javax.swing.JButton getjButton;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTeacher;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JTextField searchIDTextField;
    private javax.swing.JList<String> searchResultjList;
    private javax.swing.JTextField subjectFeejTextField;
    private javax.swing.JButton subjectIDjButton;
    private javax.swing.JRadioButton subjectIDjRadioButton;
    private javax.swing.JTextField subjectIDjTextField;
    private javax.swing.JRadioButton subjectNamejRadioButton;
    private javax.swing.JTextField subjectNamejTextField;
    private javax.swing.JComboBox<String> subjectYearjComboBox;
    private javax.swing.JTextField teacherNameTextField;
    private javax.swing.JButton updatejButton;
    // End of variables declaration//GEN-END:variables

    /*private void getTeachersNames() {
        
        
        ArrayList<Teacher> teacherNamesIDs = new ArrayList<Teacher>();
        teacherNamesIDs = TeacherController.searchTeachersNames();
        
        for(int i=0; i<teacherNamesIDs.size();i++){
            //System.out.println(teacherNamesIDs.get(i).getTeacherName());
            teacherNamejComboBox.addItem(teacherNamesIDs.get(i).getTeacherName());
        }
        
    }*/
    
    private ButtonGroup btnGrp;

    private void getSubjectNames() {
        ArrayList<String> subjectNames = new ArrayList<String>();
        subjectNames.clear();
        searchComboBox.removeAllItems();
        subjectNames = SubjectController.searchSubjectNames();
        subjectNames.add(0,"Select Category");
        for(int i=0; i<subjectNames.size();i++){
            searchComboBox.addItem(subjectNames.get(i));
            
        }
    }

    private void reset() {
        DefaultListModel listModel = (DefaultListModel) searchResultjList.getModel();
        listModel.removeAllElements();
        
        subjectNamejTextField.setText("");
        subjectIDjTextField.setText("");
        subjectFeejTextField.setText("");
        teacherNameTextField.setText("");
        subjectYearjComboBox.setSelectedIndex(0);
        searchComboBox.setSelectedIndex(0);
        searchIDTextField.setText("");
    }
}
