/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.StudentController;
import Control.SubjectController;
import Model.Student;
import java.awt.event.ItemEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import sun.util.calendar.LocalGregorianCalendar.Date;

/**
 *
 * @author DK_Roshan
 */
public class StudentJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentJFrame
     */
    public StudentJFrame() {
        initComponents();
        getSubjectGrades();
        getDate();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        searchbuttonGroup = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        searchIDTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        subjectGradeComboBox = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        nameRadioButton = new javax.swing.JRadioButton();
        idRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        malejRadioButton = new javax.swing.JRadioButton();
        femalejRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fNameTextField = new javax.swing.JTextField();
        stuIDGenButton = new javax.swing.JButton();
        ForMNameTextField = new javax.swing.JTextField();
        stuIDTextField = new javax.swing.JTextField();
        ForMTelTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        updatejButton = new javax.swing.JButton();
        deletejButton = new javax.swing.JButton();
        addjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectSelectList = new javax.swing.JList<>(new DefaultListModel());
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedList = new javax.swing.JList<>(new DefaultListModel());
        gradejComboBox = new javax.swing.JComboBox<>();
        regDateTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        addAlljButton = new javax.swing.JButton();
        addSelectedjButton = new javax.swing.JButton();
        removeAlljButton = new javax.swing.JButton();
        removeSelectedjButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        schoolTextField = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchResultList = new javax.swing.JList<>();
        getButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        DoBTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 650));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 255));

        searchIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Student ID/Name");

        subjectGradeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subjectGradeComboBoxItemStateChanged(evt);
            }
        });

        jLabel15.setText("Select Grade");

        searchbuttonGroup.add(nameRadioButton);
        nameRadioButton.setText("Name");

        searchbuttonGroup.add(idRadioButton);
        idRadioButton.setText("ID");

        jLabel2.setText("Search By");

        jDesktopPane1.setLayer(searchIDTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(subjectGradeComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(nameRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(idRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subjectGradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(idRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectGradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(nameRadioButton)
                    .addComponent(idRadioButton)
                    .addComponent(jLabel2))
                .addGap(19, 19, 19))
        );

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 70));

        jLabel3.setText("Student ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jLabel4.setText("Full Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        jLabel5.setText("Date of Birth");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        jLabel6.setText("Gender");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        genderButtonGroup.add(malejRadioButton);
        malejRadioButton.setText("Male");
        getContentPane().add(malejRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 280, -1, -1));

        genderButtonGroup.add(femalejRadioButton);
        femalejRadioButton.setText("Female");
        getContentPane().add(femalejRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, -1, -1));

        jLabel7.setText("Address");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        jLabel8.setText("Mother/Father Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        jLabel9.setText("Mother/Father Tel");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        fNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(fNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 211, 30));

        stuIDGenButton.setText("Generate");
        stuIDGenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuIDGenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(stuIDGenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 90, 30));

        ForMNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForMNameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(ForMNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 211, 30));

        stuIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuIDTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(stuIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 211, 30));

        ForMTelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForMTelTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(ForMTelTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 480, 211, 30));

        addressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(addressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 211, 30));

        updatejButton.setText("Update");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updatejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 540, 100, 53));

        deletejButton.setText("Delete");
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deletejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 540, 100, 53));

        addjButton.setText("Add");
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, 100, 53));

        subjectSelectList.setPreferredSize(new java.awt.Dimension(35, 80));
        jScrollPane1.setViewportView(subjectSelectList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 190, 175));

        selectedList.setPreferredSize(new java.awt.Dimension(35, 80));
        jScrollPane2.setViewportView(selectedList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 120, 180, 175));

        gradejComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Grade", "Grade-6", "Grade-7", "Grade-8", "Grade-9", "Grade-10", "Grade-11" }));
        gradejComboBox.setPreferredSize(new java.awt.Dimension(70, 30));
        gradejComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                gradejComboBoxItemStateChanged(evt);
            }
        });
        gradejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradejComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(gradejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 130, -1));

        regDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regDateTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(regDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 211, 30));

        jLabel10.setText("Registration Date");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        addAlljButton.setText(">>");
        addAlljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAlljButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addAlljButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, 53, -1));

        addSelectedjButton.setText(">");
        addSelectedjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSelectedjButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addSelectedjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, 53, -1));

        removeAlljButton.setText("<<");
        removeAlljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAlljButtonActionPerformed(evt);
            }
        });
        getContentPane().add(removeAlljButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 53, -1));

        removeSelectedjButton.setText("<");
        removeSelectedjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSelectedjButtonActionPerformed(evt);
            }
        });
        getContentPane().add(removeSelectedjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 210, 53, -1));

        jLabel11.setText("Select Grade");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        jLabel12.setText("School");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        schoolTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(schoolTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 211, 30));

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 540, 100, 53));

        jLabel13.setText("Select subjects");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 90, 20));

        jScrollPane3.setViewportView(searchResultList);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 290, 150));

        getButton.setText("Get");
        getButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getButtonActionPerformed(evt);
            }
        });
        getContentPane().add(getButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 410, 90, 40));

        jLabel14.setText("Search Result");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, -1, -1));
        getContentPane().add(DoBTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 210, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameTextFieldActionPerformed

    private void ForMNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForMNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ForMNameTextFieldActionPerformed

    private void stuIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stuIDTextFieldActionPerformed

    private void ForMTelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForMTelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ForMTelTextFieldActionPerformed

    private void addressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextFieldActionPerformed

    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        
        if(stuIDTextField.getText().equals("") || gradejComboBox.getSelectedItem().toString().equals("") || regDateTextField.getText().equals("") || fNameTextField.getText().equals("")|| DoBTextField.getText().equals("")|| addressTextField.getText().equals("")|| schoolTextField.getText().equals("")|| ForMNameTextField.getText().equals("")|| ForMTelTextField.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"No student is selected to update");
        }else{
            String stuID = stuIDTextField.getText();
            String regDate = regDateTextField.getText();
            String fName = fNameTextField.getText();
            String DoB = DoBTextField.getText();
            String gender;
        
            if(malejRadioButton.isSelected()){
                gender = "Male";
            }else gender = "Female";
        
            String grade = gradejComboBox.getSelectedItem().toString();
            String address = addressTextField.getText();
            String school = schoolTextField.getText();
            String ForMName = ForMNameTextField.getText();
            int ForMTel = Integer.parseInt(ForMTelTextField.getText());
            String subjectIDs = selectedList.getSelectedValue();
        
        
            ListModel model = selectedList.getModel();
            ArrayList<String> tempArrList = new ArrayList<String>();
        
            for(int i=0; i < model.getSize(); i++){
                String val =  model.getElementAt(i).toString(); 
                tempArrList.add(val);    
            }
            Student student = new Student();
            student.setfName(fName);
            student.setStuID(stuID);
            student.setSchool(school);
            student.setRegDate(regDate);
            student.setGrade(grade);
            student.setGender(gender);
            student.setForMTel(ForMTel);
            student.setForMName(ForMName);
            student.setDoB(DoB);
            student.setAddress(address);
        
            int result1 = StudentController.updateStudent(student);
            int result2 = SubjectController.updateSubjectStudent(stuID,tempArrList);
        
            if(result1==1 && result2==1){
                JOptionPane.showMessageDialog(null,"Record updated");
                reset();
            }else JOptionPane.showMessageDialog(null,"Error");
            
        }
    }//GEN-LAST:event_updatejButtonActionPerformed

    private void removeAlljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAlljButtonActionPerformed
        
        String selectedGrade = gradejComboBox.getSelectedItem().toString();
        ArrayList<String> subjectIDs = new ArrayList<String>();
        subjectIDs = SubjectController.searchSubjectIDsFromGrade(selectedGrade);
        
        DefaultListModel tempList = new DefaultListModel();
        DefaultListModel selectList = new DefaultListModel();
        
        for(int i = 0; i< selectedList.getModel().getSize();i++){
            
            String value = selectedList.getModel().getElementAt(i);
            tempList.addElement(value);
            ((DefaultListModel)selectList).removeElement(subjectIDs.get(i));
       
        }
        
        subjectSelectList.setModel(tempList);
        selectedList.setModel(selectList);
    }//GEN-LAST:event_removeAlljButtonActionPerformed

    private void schoolTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolTextFieldActionPerformed

    private void gradejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gradejComboBoxActionPerformed

    private void gradejComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_gradejComboBoxItemStateChanged
        
        if(evt.getStateChange()==ItemEvent.SELECTED){
            String selectedGrade = gradejComboBox.getSelectedItem().toString();
        
        ArrayList<String> subjectIDs = new ArrayList<String>();
        //subjectIDs = SubjectController.searchSubjectIDs(selectedSubject);
        subjectIDs = SubjectController.searchSubjectIDsFromGrade(selectedGrade);
        
        DefaultListModel tempList = new DefaultListModel();
        for(int i=0;i<subjectIDs.size();i++){
            ((DefaultListModel)tempList).addElement(subjectIDs.get(i));
            //System.out.println(subjectIDs.get(i));
        }
        subjectSelectList.setModel(tempList);
        }
    }//GEN-LAST:event_gradejComboBoxItemStateChanged

    private void addAlljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAlljButtonActionPerformed
        
        String selectedGrade = gradejComboBox.getSelectedItem().toString();
        ArrayList<String> subjectIDs = new ArrayList<String>();
        subjectIDs = SubjectController.searchSubjectIDsFromGrade(selectedGrade);
        
        DefaultListModel tempList = new DefaultListModel();
        DefaultListModel selectList = new DefaultListModel();
        
        for(int i = 0; i< subjectSelectList.getModel().getSize();i++){
            
            String value = subjectSelectList.getModel().getElementAt(i);
            selectList.addElement(value);
            ((DefaultListModel)tempList).removeElement(subjectIDs.get(i));
        }
        
        subjectSelectList.setModel(tempList);
        selectedList.setModel(selectList);
    }//GEN-LAST:event_addAlljButtonActionPerformed

    private void addSelectedjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSelectedjButtonActionPerformed
        
        String selectedGrade = gradejComboBox.getSelectedItem().toString();
        ArrayList<String> subjectIDs = new ArrayList<String>();
        subjectIDs = SubjectController.searchSubjectIDsFromGrade(selectedGrade);
        
        
        int[] selectedItemIndices = subjectSelectList.getSelectedIndices();
        for(int i=0;i<selectedItemIndices.length;i++){
            
            String value = (String) ((DefaultListModel)subjectSelectList.getModel()).get(selectedItemIndices[i]-i);
            ((DefaultListModel)selectedList.getModel()).addElement(value);
            ((DefaultListModel)subjectSelectList.getModel()).removeElement(value);
            //subjectIDs.remove(i);
        }
    }//GEN-LAST:event_addSelectedjButtonActionPerformed

    private void removeSelectedjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSelectedjButtonActionPerformed
        
        String selectedGrade = gradejComboBox.getSelectedItem().toString();
        ArrayList<String> subjectIDs = new ArrayList<String>();
        subjectIDs = SubjectController.searchSubjectIDsFromGrade(selectedGrade);
        
        int[] selectedItemIndices = selectedList.getSelectedIndices();
        for(int i=0;i<selectedItemIndices.length;i++){
            
            String value = (String) ((DefaultListModel)selectedList.getModel()).get(selectedItemIndices[i]-i);
            ((DefaultListModel)subjectSelectList.getModel()).addElement(value);
            ((DefaultListModel)selectedList.getModel()).removeElement(value);
            //subjectIDs.remove(i);
        }
    }//GEN-LAST:event_removeSelectedjButtonActionPerformed

    private void stuIDGenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuIDGenButtonActionPerformed
        
        Random rand = new Random();
        int  n = rand.nextInt(99999999) + 1;
        stuIDTextField.setText("S-"+Integer.toString(n));
    }//GEN-LAST:event_stuIDGenButtonActionPerformed

    private void regDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regDateTextFieldActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        
        if(stuIDTextField.getText().equals("") || gradejComboBox.getSelectedItem().toString().equals("") || regDateTextField.getText().equals("") || fNameTextField.getText().equals("")|| DoBTextField.getText().equals("")|| addressTextField.getText().equals("")|| schoolTextField.getText().equals("")|| ForMNameTextField.getText().equals("")|| ForMTelTextField.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"Please fill the fields");
        }else{
            String stuID = stuIDTextField.getText();
            String regDate = regDateTextField.getText();
            String fName = fNameTextField.getText();
            String DoB = DoBTextField.getText();
            String gender;
        
            if(malejRadioButton.isSelected()){
                gender = "Male";
            }else gender = "Female";
        
            String grade = gradejComboBox.getSelectedItem().toString();
            String address = addressTextField.getText();
            String school = schoolTextField.getText();
            String ForMName = ForMNameTextField.getText();
            int ForMTel = Integer.parseInt(ForMTelTextField.getText());
            String subjectIDs = selectedList.getSelectedValue();
        
        
            ListModel model = selectedList.getModel();
            ArrayList<String> tempArrList = new ArrayList<String>();
        
            for(int i=0; i < model.getSize(); i++){
                String val =  model.getElementAt(i).toString(); 
                tempArrList.add(val);    
            }
            Student student = new Student();
            student.setfName(fName);
            student.setStuID(stuID);
            student.setSchool(school);
            student.setRegDate(regDate);
            student.setGrade(grade);
            student.setGender(gender);
            student.setForMTel(ForMTel);
            student.setForMName(ForMName);
            student.setDoB(DoB);
            student.setAddress(address);
        
            int result1 = StudentController.addStudent(student);
            int result2 = SubjectController.addSubjectStudent(stuID,tempArrList);
        
            if(result1==1 && result2==1){
                JOptionPane.showMessageDialog(null,"Record inserted");
                reset();
            }else JOptionPane.showMessageDialog(null,"Error");
            
        }
        
    }//GEN-LAST:event_addjButtonActionPerformed

    private void subjectGradeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subjectGradeComboBoxItemStateChanged
        
       
        if(evt.getStateChange()==ItemEvent.SELECTED){
            String selectedGrade = subjectGradeComboBox.getSelectedItem().toString();
            //System.out.println(selectedGrade);
            ArrayList<String> arrayList = new ArrayList<String>();
            arrayList = StudentController.getStudentNames(selectedGrade);
            
          
            DefaultListModel tempList = new DefaultListModel();
            for(int i=0;i<arrayList.size();i++){
                ((DefaultListModel)tempList).addElement(arrayList.get(i));
                //System.out.println(arrayList.get(i));
            }
            searchResultList.setModel(tempList);
        }
    }//GEN-LAST:event_subjectGradeComboBoxItemStateChanged

    private void getButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getButtonActionPerformed
        String selectedStuName = searchResultList.getSelectedValue();
        Student student = StudentController.searchStudentByName(selectedStuName);
        
        String stuID = student.getStuID();
        String regDate = student.getRegDate();
        String fName = student.getfName();
        String DoB = student.getDoB();
        String gender = student.getGender();
        String grade = student.getGrade();
        String address = student.getAddress();
        String school = student.getSchool();
        String ForMName = student.getForMName();
        int ForMTel = student.getForMTel();
        
        stuIDTextField.setText(stuID);
        regDateTextField.setText(regDate);
        fNameTextField.setText(fName);
        DoBTextField.setText(DoB);
        
        addressTextField.setText(address);;
        schoolTextField.setText(school);
        ForMNameTextField.setText(ForMName);
        ForMTelTextField.setText(String.valueOf(ForMTel));
        gradejComboBox.setSelectedItem(grade);
        if("Male".equals(gender)){
            malejRadioButton.setSelected(true);
        }else femalejRadioButton.setSelected(true);
        
        ArrayList<String> arrayListNew = new ArrayList<String>();
        String selGrade = gradejComboBox.getSelectedItem().toString();
        arrayListNew = SubjectController.searchSubjectIDsFromSubjectStudent(stuID,selGrade);
        DefaultListModel tempListNew = new DefaultListModel();
        for(int i=0;i<arrayListNew.size();i++){
            ((DefaultListModel)tempListNew).addElement(arrayListNew.get(i));
            //System.out.println(subjectIDs.get(i));
        }
        subjectSelectList.setModel(tempListNew);
        
        
        
        ArrayList<String> arrayList = new ArrayList<String>();
        arrayList = SubjectController.searchSubjectStudentByStudentID(stuID);
        
        DefaultListModel tempList = new DefaultListModel();
        for(int i=0;i<arrayList.size();i++){
            ((DefaultListModel)tempList).addElement(arrayList.get(i));
            //System.out.println(subjectIDs.get(i));
        }
        selectedList.setModel(tempList);
    }//GEN-LAST:event_getButtonActionPerformed

    private void searchIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDTextFieldActionPerformed
        
        if(nameRadioButton.isSelected()){
        
            String searchName = searchIDTextField.getText();
            ArrayList<String> arrayList = new ArrayList<String>();
            arrayList = StudentController.searchStudentByNameLike(searchName);
            
          
            DefaultListModel tempList = new DefaultListModel();
            for(int i=0;i<arrayList.size();i++){
                ((DefaultListModel)tempList).addElement(arrayList.get(i));
                //System.out.println(arrayList.get(i));
            }
            searchResultList.setModel(tempList);
            
            
        }else if(idRadioButton.isSelected()){
            
            String searchID = searchIDTextField.getText();
            Student student = StudentController.searchStudentByID(searchID);
            
            String stuID = student.getStuID();
            String regDate = student.getRegDate();
            String fName = student.getfName();
            String DoB = student.getDoB();
            String gender = student.getGender();
            String grade = student.getGrade();
            String address = student.getAddress();
            String school = student.getSchool();
            String ForMName = student.getForMName();
            int ForMTel = student.getForMTel();
        
            stuIDTextField.setText(stuID);
            regDateTextField.setText(regDate);
            fNameTextField.setText(fName);
            DoBTextField.setText(DoB);
            gradejComboBox.getSelectedItem().toString();
            addressTextField.setText(address);;
            schoolTextField.setText(school);
            ForMNameTextField.setText(ForMName);
            ForMTelTextField.setText(String.valueOf(ForMTel));
            gradejComboBox.setSelectedItem(grade);
            if("Male".equals(gender)){
                malejRadioButton.setSelected(true);
            }else femalejRadioButton.setSelected(true);
        
            DefaultListModel model = (DefaultListModel) subjectSelectList.getModel();
            model.removeAllElements();
        
        
            ArrayList<String> arrayList = new ArrayList<String>();
            arrayList = SubjectController.searchSubjectStudentByStudentID(stuID);
        
            DefaultListModel tempList = new DefaultListModel();
            for(int i=0;i<arrayList.size();i++){
                ((DefaultListModel)tempList).addElement(arrayList.get(i));
            //System.out.println(subjectIDs.get(i));
            }
            selectedList.setModel(tempList);
        
        }else{
            JOptionPane.showMessageDialog(null,"Please select the search option");
        }
    }//GEN-LAST:event_searchIDTextFieldActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        
        if(stuIDTextField.getText().equals("") || gradejComboBox.getSelectedItem().toString().equals("") || regDateTextField.getText().equals("") || fNameTextField.getText().equals("")|| DoBTextField.getText().equals("")|| addressTextField.getText().equals("")|| schoolTextField.getText().equals("")|| ForMNameTextField.getText().equals("")|| ForMTelTextField.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"No student is selected to delete");
        }else{
            String stuID = stuIDTextField.getText();
        
            int result1 = StudentController.deleteStudent(stuID);
            int result2 = SubjectController.deleteSubjectStudent(stuID);
        
            if(result1==1 && result2==1 ){
                JOptionPane.showMessageDialog(null,"Record Deleted...");
            }else JOptionPane.showMessageDialog(null,"Error");
            reset();
        }
    }//GEN-LAST:event_deletejButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        reset();
        
        
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DoBTextField;
    private javax.swing.JTextField ForMNameTextField;
    private javax.swing.JTextField ForMTelTextField;
    private javax.swing.JButton addAlljButton;
    private javax.swing.JButton addSelectedjButton;
    private javax.swing.JButton addjButton;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deletejButton;
    private javax.swing.JTextField fNameTextField;
    private javax.swing.JRadioButton femalejRadioButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JButton getButton;
    private javax.swing.JComboBox<String> gradejComboBox;
    private javax.swing.JRadioButton idRadioButton;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton malejRadioButton;
    private javax.swing.JRadioButton nameRadioButton;
    private javax.swing.JTextField regDateTextField;
    private javax.swing.JButton removeAlljButton;
    private javax.swing.JButton removeSelectedjButton;
    private javax.swing.JTextField schoolTextField;
    private javax.swing.JTextField searchIDTextField;
    private javax.swing.JList<String> searchResultList;
    private javax.swing.ButtonGroup searchbuttonGroup;
    private javax.swing.JList<String> selectedList;
    private javax.swing.JButton stuIDGenButton;
    private javax.swing.JTextField stuIDTextField;
    private javax.swing.JComboBox<String> subjectGradeComboBox;
    private javax.swing.JList<String> subjectSelectList;
    private javax.swing.JButton updatejButton;
    // End of variables declaration//GEN-END:variables

    private void getSubjectGrades() {
        
        ArrayList<String> subjectNames = new ArrayList<String>();
        subjectNames.clear();
        subjectGradeComboBox.removeAllItems();
        subjectNames = SubjectController.getSubjectGrades();
        subjectNames.add(0,"Select Grade");
        for(int i=0; i<subjectNames.size();i++){
            
            subjectGradeComboBox.addItem(subjectNames.get(i));
            
        }
        
    }

    private void getDate() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDate localDate = LocalDate.now();
        //System.out.println(dtf.format(localDate)); 
        regDateTextField.setText(dtf.format(localDate));
    }

    private void reset() {
        stuIDTextField.setText("");
        regDateTextField.setText("");
        fNameTextField.setText("");
        DoBTextField.setText("");
        gradejComboBox.setSelectedIndex(0);
        subjectGradeComboBox.setSelectedIndex(0);
        addressTextField.setText("");;
        schoolTextField.setText("");
        ForMNameTextField.setText("");
        ForMTelTextField.setText("");
        gradejComboBox.setSelectedItem("");
        searchIDTextField.setText("");
        DefaultListModel model = (DefaultListModel) selectedList.getModel();
        model.removeAllElements();
        DefaultListModel modell = (DefaultListModel) subjectSelectList.getModel();
        modell.removeAllElements();
        DefaultListModel modelll = (DefaultListModel) searchResultList.getModel();
        modelll.removeAllElements();
    }

    
}
